1. 추가 피처
*제거
첫구매날짜, 마지막구매날짜, 마지막구매후 경과일 컬럼 제거 -> 개인의 구매패턴에 따라 달라지는 요소
새벽구매비율 제거 -> 새벽시간대(12~6시) 구매내역 없음
주구매지점, 주구매지점 이용비율 제거 -> 개인의 행동반경에 따라 달라지는 요소
주구매 중분류 묶음 중 가전제품, 가구, 사치품 컬럼 제거 -> 피처 중요도 낮음
주구매 대분류 묶음 중 아동용품, 가정용품, 생식품 컬럼 제거 -> 아동용품은 중분류에 있음 / 나머지는 피처중요도 낮음
환불금액 왜도, 첨도 제거 -> 대부분 결측치
ID에 대한 브랜드코드별 구매횟수 피벗테이블 제거 -> 0 포함 데이터가 너무 많음, 피처 중요도 낮음
방문일수 대비 구매건수 제거 -> 개인의 구매패턴에 따라 달라지는 요소

*생성
같은 날 두 건 이상 구매 시 구매 간 간격에 대한 평균, 표준편차 등 특성 생성 <- 쇼핑시간을 어느정도 참고할 수 있는 특성이라 생각
중분류 피벗테이블에서 야채, 생선, 주방용품에 대한 특성 중요도가 높아 이들을 묶어 하나의 컬럼으로 생성
지점코드, 중분류, 대분류별 구매금액 합계 피벗테이블 생성 -> 지점코드, 중분류, 대분류의 구매횟수 피벗테이블 중 특정 특성에 대한 중요도가 높아 구매금액 합계도 성능 향상에 도움이 될 것이라 판단


2. 결측치 처리
결측치 없음

3. 인코딩
고객등급 Ordinal 인코딩 시도 -> 성능 차이 없음 -> 원핫인코딩 유지

4. 스케일링
StandardScaler 변경

5. 기본 모델에서 성능(f1_macro) 및 피처 중요도 확인
- classification_report, train_test_split 이용. 훈련데이터로 학습 및 검증데이터로 예측 후 f1_macro 점수 확인
- 기본모델(lgbm)의 feature_importances 이용해서 피처 중요도 확인 및 기본모델에 대한 XAI 이미지 참고

-> 1 ~ 5 과정 반복하며 데이터 선택

6. 최종 데이터 추출
SelectFromModel, SelectKBest, PCA, RFECV 등 이용해서 차원축소
- SelectFromModel: threshold 매개변수 구간 탐색 및 성능확인
- SelectKBest: k 매개변수 구간 탐색 및 성능확인
- PCA: 비율 구간 탐색 및 성능확인
- RFECV: estimator 로지스틱으로 설정 후 차원축소 및 성능확인

차원축소된 데이터를 lgbm, xgb, catboost, rf, logistic 등을 통해 성능 확인
최종 3~4개 데이터 선택(원본 데이터, SFM 축소 데이터, SFM 축소 후 LDA 축소 데이터, RFECV 축소 데이터 선택)

7. 하이퍼파라미터 튜닝
원본 데이터 -> 부스팅 모델 위주로 사용(lgbm, xgboost, catboost, rf, hgb 등)
차원축소된 데이터 -> 선형모델, 비선형모델 모두 사용(logistic, lsvc, lgbm, xgboost 등)
튜닝된 모델에 대해 성능 확인
여러 조합으로 앙상블 후 성능 확인
데이터별 최종 모델 선택
- SFM 축소 데이터, SFM 축소 후 LDA 축소 데이터는 성능이 떨어져 제외
- 원본 데이터는 catboost 모델, RFECV 축소 데이터는 logistic, lsvc, sgd, lgbm, catboost 스태킹 모델

8. 앙상블
각 데이터별 선정된 모델 앙상블 후 성능 확인
- 위 두 모델 스태킹했을 때 성능 향상되어 스태킹한 모델 채택

*XAI